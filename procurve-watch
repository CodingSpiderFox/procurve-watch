#!/bin/bash
#

ROOTPATH=$(dirname $0)
SETTINGS=$ROOTPATH/etc/procurve-watch.conf

SWITCHPATH=$ROOTPATH/switches
CONFIGS=$ROOTPATH/configs

DATETIME=$(date +%Y-%m-%d-%H:%M:%S)

if [ -e "$SETTINGS" ]
then
    . $SETTINGS
else
    echo "File $SETTINGS missing."
    exit 1
fi

for x in $SWITCHPATH $CONFIGS
do
    if [ ! -e $x ]
    then
        mkdir $x
    fi
done

email-diff () {

    SWITCH=$1
    LOG=$CONFIGS/$SWITCH/$SWITCH.log
    REPORTEDCHANGES=$CONFIGS/$SWITCH/$SWITCH-reported-changes.log
    cat $LOG | mail -s "PROCURVE WATCH: $SWITCH configuration was modified." $RECIPIENTS
    echo "Changes for $DATETIME -----------" >> $REPORTEDCHANGES
    cat $LOG >> $REPORTEDCHANGES 
}

diff-switch-config () {

    SWITCH=$1
    LOGDIR=$CONFIGS/$SWITCH
    NEWCONFIG=$LOGDIR/$SWITCH-$DATETIME.cfg
    OLDCONFIG=$LOGDIR/$SWITCH-LATEST.cfg
    LOG=$LOGDIR/$SWITCH.log

    if [ -e $OLDCONFIG ]
    then

        diff -c10 $OLDCONFIG $NEWCONFIG > $LOG
        DIFFER=$?

        if [ $DIFFER == 1 ] 
        then
            cp $LOG $LOG-$DATETIME.changed
            email-diff $SWITCH
            rm $OLDCONFIG
            ln -s $NEWCONFIG $OLDCONFIG
        else
            rm $NEWCONFIG
        fi
    else
        rm $OLDCONFIG
        ln -s $NEWCONFIG $OLDCONFIG
    fi
}

fetch-config () {

    SWITCH=$1
    LOGDIR=$CONFIGS/$SWITCH
    ERRORLOG=$CONFIGS/$SWITCH/error-log.txt

    if [ ! -e $LOGDIR ]
    then
        mkdir $CONFIGS/$SWITCH
    fi


    if [ $USESSHKEYS == "No" ]
    then
        sshpass -p"$PASSWORD" scp $USERNAME@$SWITCH:cfg/running-config $LOGDIR/$SWITCH-$DATETIME.cfg >> $ERRORLOG 2>&1
    elif [ $USESSHKEYS == "Yes" ]
    then
        scp $USERNAME@$SWITCH:cfg/running-config $LOGDIR/$SWITCH-$DATETIME.cfg >> $ERRORLOG 2>&1
    fi
    diff-switch-config $SWITCH >> $ERRORLOG 2>&1
}

echo "Start $DATETIME ---------------------------------"

ALLTHESWITCHES=$(cat $SWITCHPATH/*.txt)

COUNTER=0

for x in $ALLTHESWITCHES
do
    if [ -z $x ]
    then
        continue
    fi
    echo "Fetching config for switch $x..."
    fetch-config $x &

    ((COUNTER++))
    STATE=$(expr $COUNTER % $PARALLEL)
    if [ $STATE == 0 ]
    then
        sleep $COOLDOWN
    fi
done
echo "Finished."








